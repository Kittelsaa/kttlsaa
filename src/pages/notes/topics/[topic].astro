---
import { getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import NoteCard from "../../../components/cards/NoteCard.astro";
import TopicsFilter from "../../../components/TopicsFilter.astro";
import PageWrapper from "../../../components/layouts/PageWrapper.astro";
import MasonryGrid from "../../../components/layouts/MasonryGrid.astro";

export async function getStaticPaths() {
  const notes = await getCollection("notes");
  const topics = [...new Set(notes.flatMap(note => note.data.topics || []))];
  
  return topics.map(topic => ({
    params: { topic: topic.toLowerCase().replace(/ /g, '-') },
    props: { topic },
  }));
}

const { topic } = Astro.props;
const notes = await getCollection("notes");
const topicNotes = notes.filter(note => 
  note.data.topics?.includes(topic)
);

const sortedNotes = topicNotes.sort(
  (a, b) => new Date(b.data.updated).getTime() - new Date(a.data.updated).getTime()
);
---

<Layout title={`${topic} Notes | Digital Garden`}>
  <PageWrapper>
    <h1>{topic}</h1>
    <TopicsFilter selectedTopic={topic} />

    <MasonryGrid>
      {sortedNotes.map((note) => (
        <NoteCard note={note} />
      ))}
    </MasonryGrid>
  </PageWrapper>
</Layout>